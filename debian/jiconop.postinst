#!/bin/bash
# postinst script for jitsi-meet
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)

        # checks whether the custom include is available in the config
        # if not available add it

        # debconf hostname question
        . /usr/share/debconf/confmodule

        # try to get host from jitsi-videobridge
        db_get jitsi-videobridge/jvb-hostname
        if [ -z "$RET" ] ; then
            # server hostname
            db_set jitsi-videobridge/jvb-hostname "localhost"
            db_input critical jitsi-videobridge/jvb-hostname || true
            db_go
        fi
        JVB_HOSTNAME="$RET"
        # and we're done with debconf
        db_stop

        JITSI_MEET_NGINX_CONFIG="/etc/nginx/sites-available/$JVB_HOSTNAME.conf"

        if [ -f $JITSI_MEET_NGINX_CONFIG ] && ! grep -q "include /etc/jitsi/jiconop/\*\.conf;" $JITSI_MEET_NGINX_CONFIG; then
            sed -i "s/location \/config\.js/include \/etc\/jitsi\/jiconop\/\*\.conf;\n\n    location \/config\.js/g" $JITSI_MEET_NGINX_CONFIG
        fi

        invoke-rc.d nginx reload

        CONFIG="/etc/jitsi/jiconop/config"
        # we don't want to regenerate config on upgrade
        OLDCONFIG="false"

        if [ -f $CONFIG ]; then
            . $CONFIG
            if [ -n "$JICONOP_XMPP_DOMAIN" ] && [ -n "$JICONOP_BOSH_URL" ] && [ -n "$JICONOP_PORT" ]; then
                OLDCONFIG="true"
            fi
        fi

        if [ "$OLDCONFIG" = "false" ]; then
            echo "JICONOP_XMPP_DOMAIN=$JVB_HOSTNAME" >> $CONFIG
            echo "JICONOP_BOSH_URL=http://localhost/http-bind" >> $CONFIG
            echo "JICONOP_PORT=9615" >> $CONFIG
        fi

        # we don't want to start the daemon as root
        if ! getent group jitsi > /dev/null ; then
            groupadd jitsi
        fi
        if ! getent passwd jiconop > /dev/null ; then
            useradd -r -g jitsi --shell /bin/bash --create-home -d /usr/share/jiconop jiconop
        fi
        if ! groups jiconop | grep '\bjitsi\b' > /dev/null ; then
            usermod -g jitsi jiconop
        fi

        # we create home folder only if it doesn't exist
        if [ ! -d /usr/share/jiconop ]; then
            mkdir -p /usr/share/jiconop
        fi

        # we claim the home folder of jiconop in case it is owned by someone else
        OWNER=$(stat -c '%U' /usr/share/jiconop)
        GROUP=$(stat -c '%G' /usr/share/jiconop)
        if ! dpkg-statoverride --list /usr/share/jiconop/* >/dev/null && [ "$OWNER:$GROUP" != "jiconop:jitsi" ]; then
            chown -R jiconop:jitsi /usr/share/jiconop
            OWNER=jiconop
            GROUP=jitsi
        fi

        CONFIG_DIR=$(dirname $CONFIG)
        if ! dpkg-statoverride --list "$CONFIG_DIR" >/dev/null; then
                chown root:$GROUP "$CONFIG_DIR"
                chmod 750 "$CONFIG_DIR"
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
